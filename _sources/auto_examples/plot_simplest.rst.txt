.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_simplest.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_simplest.py:


===================================================================
The simplest experiment example with one classifier and two metrics
===================================================================

Lorem impsum.



.. code-block:: default


    from sklearn.naive_bayes import GaussianNB
    clf = GaussianNB()

    from strlearn.streams import StreamGenerator
    stream = StreamGenerator(n_chunks=30, n_drifts=1)


    from sklearn.metrics import accuracy_score
    from strlearn.utils.metrics import recall
    metrics = [accuracy_score, recall]


    from strlearn.evaluators import TestThenTrain
    evaluator = TestThenTrain(metrics)


    evaluator.process(stream, clf)

    print(evaluator.scores.shape)
    evaluator.scores





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 29, 2)

    array([[[0.91      , 0.87619048],
            [0.92      , 0.9009901 ],
            [0.905     , 0.89247312],
            [0.93      , 0.91262136],
            [0.915     , 0.91150442],
            [0.89      , 0.88785047],
            [0.89      , 0.82352941],
            [0.95      , 0.92708333],
            [0.93      , 0.94117647],
            [0.93      , 0.90291262],
            [0.84      , 0.79207921],
            [0.93      , 0.86021505],
            [0.92      , 0.90265487],
            [0.915     , 0.88541667],
            [0.605     , 0.64044944],
            [0.66      , 0.70588235],
            [0.67      , 0.65137615],
            [0.65      , 0.63106796],
            [0.645     , 0.70873786],
            [0.685     , 0.7032967 ],
            [0.69      , 0.6969697 ],
            [0.71      , 0.79245283],
            [0.765     , 0.77894737],
            [0.73      , 0.71559633],
            [0.755     , 0.7706422 ],
            [0.79      , 0.79047619],
            [0.795     , 0.7979798 ],
            [0.785     , 0.80909091],
            [0.815     , 0.78350515]]])



Processing
#############################################################################

Olaboga, jakie wa≈ºne bardzo.


.. code-block:: default


    import matplotlib.pyplot as plt

    plt.figure(figsize=(6,3), dpi=400)

    for m, metric in enumerate(metrics):
        plt.plot(evaluator.scores[0, :, m], label=metric.__name__)

    plt.title("Basic example of stream processing")
    plt.ylim(0, 1)
    plt.ylabel('Quality')
    plt.xlabel('Chunk')

    plt.legend()
    plt.tight_layout()
    plt.savefig('simplest.png', transparent=True)



.. image:: /auto_examples/images/sphx_glr_plot_simplest_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.901 seconds)


.. _sphx_glr_download_auto_examples_plot_simplest.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_simplest.py <plot_simplest.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_simplest.ipynb <plot_simplest.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
