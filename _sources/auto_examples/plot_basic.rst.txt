.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_basic.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_basic.py:


=======================================================
Basic example of stationary synthetic stream processing
=======================================================

Lorem impsum.



.. code-block:: default



    import strlearn as sl
    from sklearn.neural_network import MLPClassifier
    from sklearn.naive_bayes import GaussianNB

    # Initialize list of scikit-learn classifiers with partial_fit() function
    clfs = [MLPClassifier(), GaussianNB()]

    # Declare data stream
    stream = sl.streams.StreamGenerator(n_chunks=30, n_drifts=1)

    # Select vector of metrics
    metrics = [sl.utils.metrics.bac, sl.utils.metrics.f_score]

    # Initialize evaluator with given metrics
    evaluator = sl.evaluators.TestThenTrain(metrics)









Processing
#############################################################################

Olaboga, jakie wa≈ºne bardzo.


.. code-block:: default


    # Run evaluator over stream with classifier
    evaluator.process(stream, clfs)

    evaluator.scores





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([[[0.47243108, 0.65762712],
            [0.46039604, 0.63481229],
            [0.44950256, 0.58273381],
            [0.45721149, 0.63194444],
            [0.45529448, 0.66891892],
            [0.4794493 , 0.66666667],
            [0.47158864, 0.63636364],
            [0.48758013, 0.62676056],
            [0.47621483, 0.56934307],
            [0.47752978, 0.64335664],
            [0.46059606, 0.62975779],
            [0.51447091, 0.62815884],
            [0.46943342, 0.66896552],
            [0.50440705, 0.61940299],
            [0.51138779, 0.59848485],
            [0.51770708, 0.65454545],
            [0.55852404, 0.70714286],
            [0.53483135, 0.66420664],
            [0.54178761, 0.65116279],
            [0.54511544, 0.6097561 ],
            [0.56790679, 0.6614786 ],
            [0.60718587, 0.696     ],
            [0.58822055, 0.65587045],
            [0.63816917, 0.73846154],
            [0.58680311, 0.68525896],
            [0.67919799, 0.752     ],
            [0.65226523, 0.71311475],
            [0.6540404 , 0.74509804],
            [0.69332399, 0.71559633]],

           [[0.91177945, 0.91089109],
            [0.92019202, 0.91919192],
            [0.90418048, 0.8972973 ],
            [0.93053748, 0.93069307],
            [0.91552233, 0.92376682],
            [0.89016179, 0.89622642],
            [0.89135654, 0.88421053],
            [0.94911859, 0.94680851],
            [0.9314578 , 0.91954023],
            [0.93083775, 0.93      ],
            [0.84048405, 0.83333333],
            [0.92543463, 0.91954023],
            [0.9225918 , 0.92727273],
            [0.91386218, 0.90909091],
            [0.60851301, 0.59067358],
            [0.65906363, 0.67924528],
            [0.67184192, 0.68269231],
            [0.65058553, 0.65      ],
            [0.64302873, 0.67281106],
            [0.68651074, 0.67015707],
            [0.69006901, 0.69      ],
            [0.70473705, 0.74336283],
            [0.76566416, 0.75897436],
            [0.73142454, 0.74285714],
            [0.75345297, 0.77419355],
            [0.78997494, 0.79807692],
            [0.7950295 , 0.79396985],
            [0.78232323, 0.80542986],
            [0.81408267, 0.8042328 ]]])



Plotting
#############################################################################


.. code-block:: default


    import matplotlib.pyplot as plt

    fig, ax = plt.subplots(1, len(metrics), figsize=(12, 4))
    labels = ["MLP", "GNB"]
    for m, metric in enumerate(metrics):
        ax[m].set_title(metric.__name__)
        ax[m].set_ylim(0, 1)
        for i, clf in enumerate(clfs):
            ax[m].plot(evaluator.scores[m, :, i], label=labels[i])
        ax[m].legend()



.. image:: /auto_examples/images/sphx_glr_plot_basic_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.902 seconds)


.. _sphx_glr_download_auto_examples_plot_basic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_basic.py <plot_basic.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_basic.ipynb <plot_basic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
